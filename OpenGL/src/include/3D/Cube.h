#pragma once
#include "Shaper.h"
#include "Renderer.h"

class Cube : public Shaper {
    inline static constexpr float vertices[] = {
        // ‰ΩçÁΩÆÂùêÊ†á              // Á∫πÁêÜÂùêÊ†á    // Ê≥ïÁ∫øÂùêÊ†á
        // ÂâçÈù¢ (Z = 1, Ê≥ïÁ∫ø: 0, 0, 1)
        -1.0f, -1.0f,  1.0f,    0.0f, 0.0f,   0.0f, 0.0f, 1.0f,  // Â∑¶‰∏ã
         1.0f, -1.0f,  1.0f,    1.0f, 0.0f,   0.0f, 0.0f, 1.0f,  // Âè≥‰∏ã
         1.0f,  1.0f,  1.0f,    1.0f, 1.0f,   0.0f, 0.0f, 1.0f,  // Âè≥‰∏ä
        -1.0f,  1.0f,  1.0f,    0.0f, 1.0f,   0.0f, 0.0f, 1.0f,  // Â∑¶‰∏ä

        // ÂêéÈù¢ (Z = -1, Ê≥ïÁ∫ø: 0, 0, -1)  
        -1.0f, -1.0f, -1.0f,    1.0f, 0.0f,   0.0f, 0.0f, -1.0f, // Âè≥‰∏ã
         1.0f, -1.0f, -1.0f,    0.0f, 0.0f,   0.0f, 0.0f, -1.0f, // Â∑¶‰∏ã
         1.0f,  1.0f, -1.0f,    0.0f, 1.0f,   0.0f, 0.0f, -1.0f, // Â∑¶‰∏ä
        -1.0f,  1.0f, -1.0f,    1.0f, 1.0f,   0.0f, 0.0f, -1.0f, // Âè≥‰∏ä

        // Âè≥Èù¢ (X = 1, Ê≥ïÁ∫ø: 1, 0, 0)
         1.0f, -1.0f,  1.0f,    0.0f, 0.0f,   1.0f, 0.0f, 0.0f,  // Ââç‰∏ã
         1.0f, -1.0f, -1.0f,    1.0f, 0.0f,   1.0f, 0.0f, 0.0f,  // Âêé‰∏ã
         1.0f,  1.0f, -1.0f,    1.0f, 1.0f,   1.0f, 0.0f, 0.0f,  // Âêé‰∏ä
         1.0f,  1.0f,  1.0f,    0.0f, 1.0f,   1.0f, 0.0f, 0.0f,  // Ââç‰∏ä

        // Â∑¶Èù¢ (X = -1, Ê≥ïÁ∫ø: -1, 0, 0)
        -1.0f, -1.0f, -1.0f,    0.0f, 0.0f,   -1.0f, 0.0f, 0.0f, // Âêé‰∏ã
        -1.0f, -1.0f,  1.0f,    1.0f, 0.0f,   -1.0f, 0.0f, 0.0f, // Ââç‰∏ã
        -1.0f,  1.0f,  1.0f,    1.0f, 1.0f,   -1.0f, 0.0f, 0.0f, // Ââç‰∏ä
        -1.0f,  1.0f, -1.0f,    0.0f, 1.0f,   -1.0f, 0.0f, 0.0f, // Âêé‰∏ä

        // ‰∏äÈù¢ (Y = 1, Ê≥ïÁ∫ø: 0, 1, 0)
        -1.0f,  1.0f,  1.0f,    0.0f, 0.0f,   0.0f, 1.0f, 0.0f,  // ÂâçÂ∑¶
         1.0f,  1.0f,  1.0f,    1.0f, 0.0f,   0.0f, 1.0f, 0.0f,  // ÂâçÂè≥
         1.0f,  1.0f, -1.0f,    1.0f, 1.0f,   0.0f, 1.0f, 0.0f,  // ÂêéÂè≥
        -1.0f,  1.0f, -1.0f,    0.0f, 1.0f,   0.0f, 1.0f, 0.0f,  // ÂêéÂ∑¶

        // ‰∏ãÈù¢ (Y = -1, Ê≥ïÁ∫ø: 0, -1, 0)
        -1.0f, -1.0f, -1.0f,    0.0f, 0.0f,   0.0f, -1.0f, 0.0f, // ÂêéÂ∑¶
         1.0f, -1.0f, -1.0f,    1.0f, 0.0f,   0.0f, -1.0f, 0.0f, // ÂêéÂè≥
         1.0f, -1.0f,  1.0f,    1.0f, 1.0f,   0.0f, -1.0f, 0.0f, // ÂâçÂè≥
        -1.0f, -1.0f,  1.0f,    0.0f, 1.0f,   0.0f, -1.0f, 0.0f, // ÂâçÂ∑¶
    };

    inline static constexpr unsigned int indices[] = {
        // ÂâçÈù¢
        0, 1, 2, 2, 3, 0,
        // ÂêéÈù¢
        4, 5, 6, 6, 7, 4,
        // Âè≥Èù¢
        8, 9, 10, 10, 11, 8,
        // Â∑¶Èù¢
        12, 13, 14, 14, 15, 12,
        // ‰∏äÈù¢
        16, 17, 18, 18, 19, 16,
        // ‰∏ãÈù¢
        20, 21, 22, 22, 23, 20
    };

public:
    Cube():
        Shaper(vertices, sizeof(vertices), indices, sizeof(indices) / sizeof(unsigned int), {(float)3, (float)2, (float)3})  // üÜï ‰ΩçÁΩÆ3 + Á∫πÁêÜ2 + Ê≥ïÁ∫ø3
    {
        va.LinkBufferAndLayout(vb, layout);
    }

    void Draw(Shader& shader, const Renderer& renderer) override {
        renderer.Draw(va, ib, shader);
    }
};

/*
 * Copyright (c) 2025 
 * Email: 2523877046@qq.com
 * Author: Baiqiang Long (Buzzlight)
 * 
 * This file is part of the ReduxGL project.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
